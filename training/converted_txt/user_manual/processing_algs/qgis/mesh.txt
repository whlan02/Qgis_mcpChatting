
Mesh

Export contours
Creates contours as a vector layer from a mesh scalar dataset.

Parameters








Label
Name
Type
Description



Input mesh layer
INPUT
[mesh]
The mesh layer to export data from

Dataset groups
DATASET_GROUPS
[layer] [list]
The dataset groups

Dataset time
DATASET_TIME
[datetime]
The time range to take into account

0 --- Current canvas time
1 --- Defined date/time
2 --- Dataset group time step



Increment between contour levels
Optional

INCREMENT
[number]
Default: Not set

Interval between generated levels.

Minimum contour level
Optional

MINIMUM
[number]
Default: Not set

Starting level values of contours.

Maximum contour level
Optional

MAXIMUM
[number]
Default: Not set

Maximum values of contours, i.e. no generated levels will be greater than this value.

List of contours level
Optional

CONTOUR_LEVEL_LIST
[number]
Default: Not set

List of wanted levels of contours (separated by commas).
If filled, the increment, minimum, and maximum fields will not be considered.

Output coordinate system
Optional

CRS_OUTPUT
[crs]
Coordinate Reference System to assign to the output

Exported contour lines
OUTPUT_LINES
[vector: line]
Default: [Create temporary layer]

Specify the output line layer representing the contours
of the mesh layer. One of:

Exported contour polygons
OUTPUT_POLYGONS
[vector: polygon]
Default: [Create temporary layer]

Specify the output polygon layer representing the contours
of the mesh layer. One of:





Outputs








Label
Name
Type
Description



Exported contour lines
OUTPUT_LINES
[vector: line]
Line layer representing the contours of the mesh layer.

Exported contour polygons
OUTPUT_POLYGONS
[vector: polygon]
Polygon layer representing the contours of the mesh layer.





Python code
Algorithm ID: native:meshcontours



Export cross section dataset values on lines from mesh
Extracts a mesh dataset's values from lines contained in a vector layer.
Each line is discretized with a resolution distance parameter for extraction
of values on its vertices.

Parameters








Label
Name
Type
Description



Input mesh layer
INPUT
[mesh]
The mesh layer to export data from

Dataset groups
DATASET_GROUPS
[layer] [list]
The dataset groups

Dataset time
DATASET_TIME
[datetime]
The time range to take into account

0 --- Current canvas time
1 --- Defined date/time
2 --- Dataset group time step



Lines for data export
INPUT_LINES
[vector: line]
Lines where the data will be extracted from the dataset mesh

Line segmentation resolution
RESOLUTION
[number]
Default: 10.0

The distance between points on the lines where the data
will be extracted from the dataset mesh.

Digits count for dataset value
DATASET_DIGITS
[number]
Default: 2

Number of digits to round dataset values

Exported data CSV file
OUTPUT
[file]
Default: [Save to temporary file]

Specification of the output file. One of:





Outputs








Label
Name
Type
Description



Exported data CSV file
OUTPUT
[file]
Â 





Python code
Algorithm ID: native:meshexportcrosssection



Export mesh edges
Exports a mesh layer's edges to a line vector layer,
with the dataset values on edges as attribute values.

Parameters








Label
Name
Type
Description



Input mesh layer
INPUT
[mesh]
The mesh layer to export data from

Dataset groups
DATASET_GROUPS
[layer] [list]
The dataset groups

Dataset time
DATASET_TIME
[datetime]
The time range to take into account

0 --- Current canvas time
1 --- Defined date/time
2 --- Dataset group time step



Output coordinate system
Optional

CRS_OUTPUT
[crs]
Coordinate Reference System to assign to the output

Export vector option
VECTOR_OPTION
[enumeration]
Coordinate type of vector value exportation.

0 --- Cartesian (x,y)
1 --- Polar (magnitude, degree)
2 --- Cartesian and polar



Output vector layer
OUTPUT
[vector: line]
Default: [Create temporary layer]

Specification of the output file. One of:





Outputs








Label
Name
Type
Description



Output vector layer
OUTPUT
[vector: line]
Output vector line layer containing the edges of the input mesh
layer with associated dataset values





Python code
Algorithm ID: native:exportmeshedges



Export mesh faces
Exports a mesh layer's faces to a polygon vector layer,
with the dataset values on faces as attribute values.

Parameters








Label
Name
Type
Description



Input mesh layer
INPUT
[mesh]
The mesh layer to export data from

Dataset groups
DATASET_GROUPS
[layer] [list]
The dataset groups

Dataset time
DATASET_TIME
[datetime]
The time range to take into account

0 --- Current canvas time
1 --- Defined date/time
2 --- Dataset group time step



Output coordinate system
Optional

CRS_OUTPUT
[crs]
Coordinate Reference System to assign to the output

Export vector option
VECTOR_OPTION
[enumeration]
Coordinate type of vector value exportation.

0 --- Cartesian (x,y)
1 --- Polar (magnitude, degree)
2 --- Cartesian and polar



Output vector layer
OUTPUT
[vector: polygon]
Default: [Create temporary layer]

Specification of the output file. One of:





Outputs








Label
Name
Type
Description



Output vector layer
OUTPUT
[vector: polygon]
Output vector polygon layer containing the faces of the input mesh
layer with associated dataset values





Python code
Algorithm ID: native:exportmeshfaces



Export mesh on grid
Exports a mesh layer's dataset values to a gridded point vector layer,
with the dataset values on this point as attribute values.
For data on volume (3D stacked dataset values), the exported dataset
values are averaged on faces using the method defined in :ref:`the mesh layer
properties <mesh_stacked_averaging>` (default is Multi level averaging method).
1D meshes are not supported.

Parameters








Label
Name
Type
Description



Input mesh layer
INPUT
[mesh]
The mesh layer to export data from

Dataset groups
DATASET_GROUPS
[layer] [list]
The dataset groups

Dataset time
DATASET_TIME
[datetime]
The time range to take into account

0 --- Current canvas time
1 --- Defined date/time
2 --- Dataset group time step



Extent
Optional

EXTENT
[extent]
Specify the spatial extent on which to process the data.

Grid spacing
Optional

GRID_SPACING
[number]
Default: 10.0

Spacing between the sample points to use

Output coordinate system
Optional

CRS_OUTPUT
[crs]
Coordinate Reference System to assign to the output

Export vector option
VECTOR_OPTION
[enumeration]
Coordinate type of vector value exportation.

0 --- Cartesian (x,y)
1 --- Polar (magnitude, degree)
2 --- Cartesian and polar



Output vector layer
OUTPUT
[vector: point]
Default: [Create temporary layer]

Specification of the output file. One of:





Outputs








Label
Name
Type
Description



Output vector layer
OUTPUT
[vector: point]
Output vector point layer with dataset values computed
from the overlaid face.





Python code
Algorithm ID: native:exportmeshongrid



Export mesh vertices
Exports a mesh layer's vertices to a point vector layer,
with the dataset values on vertices as attribute values.

Parameters








Label
Name
Type
Description



Input mesh layer
INPUT
[mesh]
The mesh layer to export data from

Dataset groups
DATASET_GROUPS
[layer] [list]
The dataset groups

Dataset time
DATASET_TIME
[datetime]
The time range to take into account

0 --- Current canvas time
1 --- Defined date/time
2 --- Dataset group time step



Output coordinate system
Optional

CRS_OUTPUT
[crs]
Coordinate Reference System to assign to the output

Export vector option
VECTOR_OPTION
[enumeration]
Coordinate type of vector value exportation.

0 --- Cartesian (x,y)
1 --- Polar (magnitude, degree)
2 --- Cartesian and polar



Output vector layer
OUTPUT
[vector: point]
Default: [Create temporary layer]

Specification of the output file. One of:





Outputs








Label
Name
Type
Description



Output vector layer
OUTPUT
[vector: point]
Output vector point layer containing the vertices of the input mesh
layer with associated dataset values





Python code
Algorithm ID: native:exportmeshvertices



Export time series values from points of a mesh dataset
Extracts a mesh dataset's time series values from points contained in a vector layer.
If the time step is kept to its default value (0 hours), the time step used
is the one of the two first datasets of the first selected dataset group.

Parameters








Label
Name
Type
Description



Input mesh layer
INPUT
[mesh]
The mesh layer to extract data from

Dataset groups
DATASET_GROUPS
[layer] [list]
The dataset groups

Starting time
STARTING_TIME
[datetime]
The start of the time range to take into account

0 --- Current canvas time
1 --- Defined date/time
2 --- Dataset group time step



Finishing time
FINISHING_TIME
[datetime]
The end of the time range to take into account

0 --- Current canvas time
1 --- Defined date/time
2 --- Dataset group time step



Time step (hours)
Optional

TIME_STEP
[number]
Default: 0

Time between two consecutive steps to extract.
Keep 0 to use time step of the first selected dataset group.

Points for data export
INPUT_POINTS
[vector: point]
Vector layer containing points where the data will be extracted from the dataset mesh

Digits count for coordinates
COORDINATES_DIGITS
[number]
Number of digits to round coordinate values
Default: 2


Digits count for dataset value
DATASET_DIGITS
[number]
Default: 2

Number of digits to round dataset values

Exported data CSV file
OUTPUT
[file]
Default: [Save to temporary file]

Specification of the output file. One of:





Outputs








Label
Name
Type
Description



Exported data CSV file
OUTPUT
[file]
:file:`.CSV` file containing the mesh dataset time series values
at the overlaying point features





Python code
Algorithm ID: native:meshexporttimeseries



Rasterize mesh dataset
Creates a raster layer from a mesh dataset.
For data on volume (3D stacked dataset values), the exported dataset
values are averaged on faces using the method defined in :ref:`the mesh layer
properties <mesh_stacked_averaging>` (default is Multi level averaging method).
1D meshes are not supported.

Parameters

Basic parameters








Label
Name
Type
Description



Input mesh layer
INPUT
[mesh]
The mesh layer to export data from

Dataset groups
DATASET_GROUPS
[layer] [list]
The dataset groups

Dataset time
DATASET_TIME
[datetime]
The time range to take into account

0 --- Current canvas time
1 --- Defined date/time
2 --- Dataset group time step



Extent
Optional

EXTENT
[extent]
Specify the spatial extent on which to process the data.

Pixel size
PIXEL_SIZE
[number]
Default: 1.0

Pixel size of the output raster layer.

Output coordinate system
Optional

CRS_OUTPUT
[crs]
Coordinate Reference System to assign to the output

Output raster layer
OUTPUT
[raster]
Default: [Save to temporary file]

Specification of the output file. One of:





Advanced parameters








Label
Name
Type
Description



Creation options
Optional

CREATE_OPTIONS
[string]
Default: ''

For adding one or more creation options that control the
raster to be created (colors, block size, file
compression...).
For convenience, you can rely on predefined profiles (see
:ref:`GDAL driver options section <gdal_createoptions>`).
Batch Process and Model Designer: separate multiple options with a pipe
character (|).







Outputs








Label
Name
Type
Description



Output raster layer
OUTPUT
[raster]
Output raster layer with dataset values computed
from the mesh layer.





Python code
Algorithm ID: native:meshrasterize



Surface to Polygon
Exports a polygon file containing the boundary of a mesh layer.
The resulting polygon may contain holes and may be a multi-part polygon.

Parameters








Label
Name
Type
Description



Input mesh layer
INPUT
[mesh]
The input mesh layer whose boundary will be exported as a polygon

Output coordinate system
Optional

OUTPUT_CRS
[crs]
The coordinate reference system (CRS) for the output polygon layer.
If not specified, the CRS of the input mesh layer will be used.

Output vector layer
OUTPUT
[vector: polygon]
Default: [Create temporary layer]

Specification of the output file. One of:





Outputs








Label
Name
Type
Description



Output vector layer
OUTPUT
[vector: polygon]
The resulting polygon layer containing the boundary of the mesh layer.
The polygon may contain holes and may be multi-part.





Python code
Algorithm ID: native:surfacetopolygon



TIN mesh creation
Creates a TIN mesh layer from vector layers.
The TIN mesh is created using a Delaunay triangulation.

Parameters








Label
Name
Type
Description



Input layers
SOURCE_DATA
[vector: any] [list]
Vector layers to combine to generate the mesh layer

Vector layer
GUI ONLY
[vector: any] [list]
A selector for the vector layers to combine to generate the mesh layer

Value on vertex
GUI ONLY
[tablefield: any]
A selector of the field to use from the selected layer.
Each vertex is assigned the corresponding value of its original feature.

Use Z-coordinate for value on vertex
GUI ONLY
[boolean]
Default: False

If checked, the Z value of vector layer points or polygons/lines vertices
will be used to assign the Z value of the vertex mesh layer.
Only available if the input layers are 3D.

Output format
MESH_FORMAT
[enumeration]
Default: 2DM

Output format of the generated layer

0 --- 2DM
1 --- SELAFIN
2 --- PLY
3 --- Ugrid



Output coordinate system
Optional

CRS_OUTPUT
[crs]
Coordinate Reference System to assign to the output

Output file
OUTPUT_MESH
[mesh]
Default: [Save to temporary file]

Specification of the output file. One of:





Outputs








Label
Name
Type
Description



Output file
OUTPUT_MESH
[mesh]
Output mesh layer with dataset values computed
from the vector layers.





Python code
Algorithm ID: native:tinmeshcreation



