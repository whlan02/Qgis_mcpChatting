




orphan:




abs
Returns the absolute value of a number.






Syntax
abs(value)

Arguments

value - a number



Examples

abs(-2) → 2







acos
Returns the inverse cosine of a value in radians.






Syntax
acos(value)

Arguments

value - cosine of an angle in radians



Examples

acos(0.5) → 1.0471975511966







asin
Returns the inverse sine of a value in radians.






Syntax
asin(value)

Arguments

value - sine of an angle in radians



Examples

asin(1.0) → 1.5707963267949







atan
Returns the inverse tangent of a value in radians.






Syntax
atan(value)

Arguments

value - tan of an angle in radians



Examples

atan(0.5) → 0.463647609000806







atan2
Returns the inverse tangent of dy/dx by using the signs of the two arguments to determine the quadrant of the result.






Syntax
atan2(dy, dx)

Arguments

dy - y coordinate difference
dx - x coordinate difference



Examples

atan2(1.0, 1.732) → 0.523611477769969







ceil
Rounds a number upwards.






Syntax
ceil(value)

Arguments

value - a number



Examples

ceil(4.9) → 5
ceil(-4.9) → -4







clamp
Restricts an input value to a specified range.






Syntax
clamp(minimum, input, maximum)

Arguments

minimum - the smallest value input is allowed to take.
input - a value which will be restricted to the range specified by minimum and maximum
maximum - the largest value input is allowed to take



Examples

clamp(1,5,10) → 5
input is between 1 and 10 so is returned unchanged

clamp(1,0,10) → 1
input is less than minimum value of 1, so function returns 1

clamp(1,11,10) → 10
input is greater than maximum value of 10, so function returns 10








cos
Returns cosine of an angle.






Syntax
cos(angle)

Arguments

angle - angle in radians



Examples

cos(1.571) → 0.000796326710733263







degrees
Converts from radians to degrees.






Syntax
degrees(radians)

Arguments

radians - numeric value



Examples

degrees(3.14159) → 180
degrees(1) → 57.2958







exp
Returns exponential of an value.






Syntax
exp(value)

Arguments

value - number to return exponent of



Examples

exp(1.0) → 2.71828182845905







floor
Rounds a number downwards.






Syntax
floor(value)

Arguments

value - a number



Examples

floor(4.9) → 4
floor(-4.9) → -5







ln
Returns the natural logarithm of a value.






Syntax
ln(value)

Arguments

value - numeric value



Examples

ln(1) → 0
ln(2.7182818284590452354) → 1







log
Returns the value of the logarithm of the passed value and base.






Syntax
log(base, value)

Arguments

base - any positive number
value - any positive number



Examples

log(2, 32) → 5
log(0.5, 32) → -5







log10
Returns the value of the base 10 logarithm of the passed expression.






Syntax
log10(value)

Arguments

value - any positive number



Examples

log10(1) → 0
log10(100) → 2







max
Returns the largest value in a set of values.






Syntax
max(value1, value2, ...)

Arguments

value - a number



Examples

max(2,10.2,5.5) → 10.2
max(20.5,NULL,6.2) → 20.5







min
Returns the smallest value in a set of values.






Syntax
min(value1, value2, ...)

Arguments

value - a number



Examples

min(20.5,10,6.2) → 6.2
min(2,-10.3,NULL) → -10.3







pi
Returns value of pi for calculations.






Syntax
pi()

Examples

pi() → 3.14159265358979







radians
Converts from degrees to radians.






Syntax
radians(degrees)

Arguments

degrees - numeric value



Examples

radians(180) → 3.14159
radians(57.2958) → 1







rand
Returns a random integer within the range specified by the minimum and maximum argument (inclusive). If a seed is provided, the returned will always be the same, depending on the seed.






Syntax
rand(min, max, [seed=NULL])
[] marks optional arguments


Arguments

min - an integer representing the smallest possible random number desired
max - an integer representing the largest possible random number desired
seed - any value to use as seed



Examples

rand(1, 10) → 8







randf
Returns a random float within the range specified by the minimum and maximum argument (inclusive). If a seed is provided, the returned will always be the same, depending on the seed.






Syntax
randf([min=0.0], [max=1.0], [seed=NULL])
[] marks optional arguments


Arguments

min - an float representing the smallest possible random number desired
max - an float representing the largest possible random number desired
seed - any value to use as seed



Examples

randf(1, 10) → 4.59258286403147







round
Rounds a number to number of decimal places.






Syntax
round(value, [places=0])
[] marks optional arguments


Arguments

value - decimal number to be rounded
places - Optional integer representing number of places to round decimals to. Can be negative.



Examples

round(1234.567, 2) → 1234.57
round(1234.567) → 1235
round(1234.567, -1) → 1230







scale_exponential
Transforms a given value from an input domain to an output range using an exponential curve. This function can be used to ease values in or out of the specified output range.






Syntax
scale_exponential(value, domain_min, domain_max, range_min, range_max, exponent)

Arguments

value - A value in the input domain. The function will return a corresponding scaled value in the output range.
domain_min - Specifies the minimum value in the input domain, the smallest value the input value should take.
domain_max - Specifies the maximum value in the input domain, the largest value the input value should take.
range_min - Specifies the minimum value in the output range, the smallest value which should be output by the function.
range_max - Specifies the maximum value in the output range, the largest value which should be output by the function.
exponent - A positive value (greater than 0), which dictates the way input values are mapped to the output range. Large exponents will cause the output values to 'ease in', starting slowly before accelerating as the input values approach the domain maximum. Smaller exponents (less than 1) will cause output values to 'ease out', where the mapping starts quickly but slows as it approaches the domain maximum.



Examples

scale_exponential(5,0,10,0,100,2) → 3.030
easing in, using an exponent of 2

scale_exponential(3,0,10,0,100,0.5) → 87.585
easing out, using an exponent of 0.5








scale_linear
Transforms a given value from an input domain to an output range using linear interpolation.






Syntax
scale_linear(value, domain_min, domain_max, range_min, range_max)

Arguments

value - A value in the input domain. The function will return a corresponding scaled value in the output range.
domain_min - Specifies the minimum value in the input domain, the smallest value the input value should take.
domain_max - Specifies the maximum value in the input domain, the largest value the input value should take.
range_min - Specifies the minimum value in the output range, the smallest value which should be output by the function.
range_max - Specifies the maximum value in the output range, the largest value which should be output by the function.



Examples

scale_linear(5,0,10,0,100) → 50

scale_linear(0.2,0,1,0,360) → 72
scaling a value between 0 and 1 to an angle between 0 and 360

scale_linear(1500,1000,10000,9,20) → 9.6111111
scaling a population which varies between 1000 and 10000 to a font size between 9 and 20








scale_polynomial
Transforms a given value from an input domain to an output range using a polynomial curve. This function can be used to ease values in or out of the specified output range.






Syntax
scale_polynomial(value, domain_min, domain_max, range_min, range_max, exponent)

Arguments

value - A value in the input domain. The function will return a corresponding scaled value in the output range.
domain_min - Specifies the minimum value in the input domain, the smallest value the input value should take.
domain_max - Specifies the maximum value in the input domain, the largest value the input value should take.
range_min - Specifies the minimum value in the output range, the smallest value which should be output by the function.
range_max - Specifies the maximum value in the output range, the largest value which should be output by the function.
exponent - A positive value (greater than 0), which dictates the way input values are mapped to the output range. Large exponents will cause the output values to 'ease in', starting slowly before accelerating as the input values approach the domain maximum. Smaller exponents (less than 1) will cause output values to 'ease out', where the mapping starts quickly but slows as it approaches the domain maximum.



Examples

scale_polynomial(5,0,10,0,100,2) → 25
easing in, using an exponent of 2

scale_polynomial(3,0,10,0,100,0.5) → 54.772
easing out, using an exponent of 0.5








sin
Returns the sine of an angle.






Syntax
sin(angle)

Arguments

angle - angle in radians



Examples

sin(1.571) → 0.999999682931835







sqrt
Returns square root of a value.






Syntax
sqrt(value)

Arguments

value - a number



Examples

sqrt(9) → 3







tan
Returns the tangent of an angle.






Syntax
tan(angle)

Arguments

angle - angle in radians



Examples

tan(1.0) → 1.5574077246549







